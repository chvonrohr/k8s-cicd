apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          livenessProbe:
            httpGet:
              port: 8080
              path: /
            failureThreshold: 5
            successThreshold: 1
            periodSeconds: 10
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              port: 8080
              path: /
            failureThreshold: 5
            successThreshold: 1
            periodSeconds: 10
            initialDelaySeconds: 5
          image: eu.gcr.io/letsboot/kubernetes-course/backend:latest
          ports:
            - containerPort: 8080
          env:
            - name: LETSBOOT_QUEUE.HOST
              value: letsboot-queue-rabbitmq
            - name: LETSBOOT_QUEUE.USERNAME
              value: user
            - name: LETSBOOT_QUEUE.PASSWORD
              valueFrom:
                secretKeyRef:
                  name: queue-rabbitmq
                  key: rabbitmq-password
            - name: LETSBOOT_DB.HOST
              value: letsboot-database-postgresql
            - name: LETSBOOT_DB.DATABASE
              value: letsboot
            - name: LETSBOOT_DB.USERNAME
              value: letsboot
            - name: LETSBOOT_DB.TYPE
              value: postgres
            - name: LETSBOOT_DB.PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-postgresql
                  key: postgresql-password
