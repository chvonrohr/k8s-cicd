stages:
- test
- build
- deploy

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/

test_go:
  stage: test
  image: golang
  script:
    - cd project-solution
    - export GO111MODULE=on
    - go mod download
    - go test ./...

test_frontend:
  stage: test
  image: trion/ng-cli-karma
  script:
    - cd project-solution/web
    - yarn install
    - ng test --progress false --watch false

build_backend:
  variables:
    APP: backend
  stage: build
  tags:
  - docker
  image: docker:stable
  services:
  - docker:dind
  script:
  - docker build -t $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA -f project-solution/build/package/$APP.Dockerfile project-solution/
  - docker push $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA
  - echo $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA
  before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build_frontend:
  variables:
    APP: frontend
  stage: build
  tags:
  - docker
  image: docker:stable
  services:
  - docker:dind
  script:
  - docker build -t $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA -f project-solution/build/package/$APP.Dockerfile project-solution/
  - docker push $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA
  - echo $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA
  before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build_crawler:
  variables:
    APP: crawler
  stage: build
  tags:
  - docker
  image: docker:stable
  services:
  - docker:dind
  script:
  - docker build -t $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA -f project-solution/build/package/$APP.Dockerfile project-solution/
  - docker push $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA
  - echo $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA
  before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build_scheduler:
  variables:
    APP: scheduler
  stage: build
  tags:
  - docker
  image: docker:stable
  services:
  - docker:dind
  script:
  - docker build -t $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA -f project-solution/build/package/$APP.Dockerfile project-solution/
  - docker push $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA
  - echo $CI_REGISTRY_IMAGE/$APP:$CI_COMMIT_SHORT_SHA
  before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

deploy_all:
  variables:
    CLUSTER_NAME: CHANGE-ME
  stage: deploy
  tags: [ docker ]
  image: google/cloud-sdk:alpine
  before_script:
  - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
  - echo $GCR_KEY > ${HOME}/gcloud-service-key.json
  - gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
  - gcloud components install kubectl
  - gcloud container clusters get-credentials $CLUSTER_NAME --region europe-west6 --project letsboot
  script:
    - kubectl apply -f project-start/deployments --recursive